---
import "congreso:styles/navbar.css";
import "animate.css";

interface Props{
  titulo:string
}

const {titulo = "UNAMAD"} = Astro.props;

const navItems = [
  {
    href: "/congreso",
    label: "Home",
    icono: "fa-solid fa-house",
    config: "text-green-500 text-2xl",
  },
  { href: "/posts", label: "Posts", icono: "fa-solid fa-house" },
  { href: "/about", label: "About", icono: "fa-solid fa-house" },
];
---

<script>
  const linkClasses = {
    active: [
      "text-mint-500",
      "dark:text-mint-400",
      "font-bold",
      "[text-shadow:1px_1px_11px_rgba(208,251,229,0.7)]",
    ],
    inactive: ["dark:text-zinc-300", "text-blacktext"],
  };

  function cerrarNav(){
    const caja = document.getElementsByClassName("nav")[0];
    caja.classList.add("animate__bounceOut");
    setTimeout(() => {
      caja.classList.remove("openNav");
      caja.classList.add("closeNav");
      caja.classList.remove("animate__bounceOut");
      document.body.style.overflow = "";
    }, 2000);
  }

  function toggleLinkClasses(link: Element, isActive: boolean) {
    if (isActive) {
      link.classList.add(...linkClasses.active);
      link.classList.remove(...linkClasses.inactive);
      link.setAttribute("aria-current", "page");
    } else {
      link.classList.remove(...linkClasses.active);
      link.classList.add(...linkClasses.inactive);
      link.removeAttribute("aria-current");
    }
  }

  const boton = document.getElementById("btnCerrar");
  const botonOpen = document.getElementById("openModal");

  boton?.addEventListener("click",cerrarNav)
  botonOpen?.addEventListener("click",()=>{
      document.body.style.overflow = "hidden";
      document.getElementsByClassName("nav")[0].classList.add("openNav");
      document.getElementsByClassName("nav")[0].classList.remove("closeNav");
  })
</script>

<nav class="nav animate__animated animate__backInDown ">
  <p id="btnCerrar" class="nav__icon"><i class="fa-solid fa-x"></i></p>
  <div
    class="hidden md:flex space-x-4 contenedor animate__animated animate__bounce"
  >
    {
      navItems.map((item) => {
        return (
          <a href={item.href} class="nav_item ">
            <i class={`${item.icono}  nav__icon  ${item.config} `} />
            <span class="nav__label">{item.label}</span>
            <span class="nav__icon" >|</span>
          </a>
        );
      })
    }
  </div>
</nav>
<nav class="navSecundario" >
  <p class="multicolor-text" > {titulo}</p>
  <p id="openModal"><i class="fa-brands fa-slack  "></i></p>
</nav>  
